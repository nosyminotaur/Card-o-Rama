using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Filters;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;

namespace CardGame.ExceptionService
{
    /// <summary>
    /// Global Exception filter that handles all exceptions of type "ApiException"
    /// </summary>
    public class GlobalExceptionFilter : IExceptionFilter
    {
        public void OnException(ExceptionContext context)
        {
            //Check if exception type is an exception generated by the API
            var exception = context.Exception;
            //Type cast once we know it is an ApiException (Pattern Matching)
            if (exception is ApiException apiException)
            {
                //3 fields corresponding to ProblemDetails
                int status;
                string title;
                string detail;

                //Setting default values
                title = apiException.Message ?? "Internal Server Error";

                status = (int)apiException.Status;
                if (status == 0)
                    status = (int)HttpStatusCode.InternalServerError;

                detail = apiException.Detail ?? "Some error occured on the server!";

                //Adding the ProblemDetails class to the Global Exception Filter ensures that all exceptions are
                //reported in a similar manner
                ProblemDetails problemDetails = new ProblemDetails
                {
                    Title = title,
                    Status = status,
                    Detail = detail
                };

                context.ExceptionHandled = true;
                context.Result = new ExceptionObjectResult(problemDetails);
            }
        }
    }
}
